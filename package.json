{
  "name": "flashcard-app",
  "version": "0.1.0",
  "private": true,
  "devDependencies": {
    "autoprefixer": "7.1.6",
    "ava": "^0.15.2",
    "babel-core": "6.26.0",
    "babel-eslint": "7.2.3",
    "babel-jest": "20.0.3",
    "babel-loader": "7.1.2",
    "babel-preset-react-app": "^3.1.1",
    "babel-runtime": "6.26.0",
    "babel-plugin-webpack-loaders": "^0.9.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-es2015-native-modules": "^6.6.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-react-optimize": "^1.0.1",
    "babel-preset-stage-0": "^6.5.0",
    "babel-register": "^6.26.0",
    "case-sensitive-paths-webpack-plugin": "2.1.1",
    "chai": "^3.5.0",
    "chalk": "1.1.3",
    "chunk-manifest-webpack-plugin": "^1.1.2",
    "coveralls": "^2.11.9",
    "css-loader": "^0.28.7",
    "css-modules-require-hook": "^4.2.2",
    "cssnano": "^3.7.0",
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-16": "^1.1.1",
    "eslint": "4.10.0",
    "eslint-config-react-app": "^2.1.0",
    "eslint-config-airbnb": "^9.0.1",
    "eslint-loader": "1.9.0",
    "eslint-plugin-ava": "^2.4.0",
    "eslint-plugin-flowtype": "2.39.1",
    "eslint-plugin-import": "2.8.0",
    "eslint-plugin-jsx-a11y": "5.1.1",
    "eslint-plugin-react": "7.4.0",
    "eventsource-polyfill": "^0.9.6",
    "extract-text-webpack-plugin": "^3.0.2",
    "file-loader": "1.1.5",
    "fs-extra": "3.0.1",
    "html-webpack-plugin": "2.29.0",
    "sw-precache-webpack-plugin": "0.11.4",
    "url-loader": "0.6.2",
    "webpack": "^3.10.0",
    "webpack-dev-server": ">=3.1.11",
    "webpack-manifest-plugin": "1.3.2",
    "webpack-dev-middleware": "^1.12.2",
    "webpack-hot-middleware": "^2.21.0",
    "webpack2-externals-plugin": "^1.0.0",
    "jest": "20.0.4",
    "dotenv": "4.0.0",
    "dotenv-expand": "4.0.1",
    "postcss-flexbugs-fixes": "3.2.0",
    "postcss-loader": "2.0.9",
    "jsdom": "^9.2.1",
    "mock-css-modules": "^1.0.0",
    "mockgoose": "^7.3.5",
    "nock": "^8.0.0",
    "nodemon": "^1.9.2",
    "null-loader": "^0.1.1",
    "nyc": "^6.4.4",
    "postcss-cssnext": "^2.6.0",
    "postcss-focus": "^1.0.0",
    "postcss-reporter": "^1.3.3",
    "raf": "^3.4.0",
    "react-addons-test-utils": "^15.1.0",
    "react-hot-loader": "^3.0.0-beta.2",
    "redux-ava": "^2.0.0",
    "redux-devtools": "^3.3.1",
    "redux-devtools-dock-monitor": "^1.1.1",
    "redux-devtools-log-monitor": "^1.0.11",
    "rimraf": "^2.5.2",
    "sinon": "^1.17.4",
    "style-loader": "^0.19.1",
    "supertest": "^1.2.0"
  },
  "dependencies": {
    "@material-ui/core": "^3.8.3",
    "@material-ui/icons": "^3.0.2",
    "babel-core": "^6.26.0",
    "body-parser": "^1.15.1",
    "bootstrap": "^3.3.7",
    "compression": "^1.6.2",
    "cross-env": "^1.0.8",
    "cuid": "^1.3.8",
    "express": "^4.13.4",
    "immutable": "^3.8.2",
    "intl": "^1.2.4",
    "intl-locales-supported": "^1.0.0",
    "isomorphic-fetch": "^2.2.1",
    "limax": "^1.3.0",
    "mongoose": "^4.4.20",
    "object-assign": "4.1.1",
    "promise": "8.0.1",
    "prop-types": "^15.6.2",
    "raf": "3.4.0",
    "react": "^16.7.0",
    "react-dev-utils": "^5.0.0",
    "react-dom": "^16.4.1",
    "react-fontawesome": "^1.6.1",
    "react-helmet": "^5.2.0",
    "react-intl": "^2.1.2",
    "react-markdown": "^3.1.5",
    "react-redux": "^4.4.5",
    "react-router": "^4.3.1",
    "react-router-dom": "^4.3.1",
    "redux": "^3.5.2",
    "redux-thunk": "^2.1.0",
    "sanitize-html": "^1.11.4",
    "style-loader": "0.19.0",
    "uuid": "^3.3.2",
    "whatwg-fetch": "2.0.3"
  },
  "scripts": {
    "test": "cross-env NODE_ENV=test PORT=8080 MONGO_URL=mongodb://localhost:27017/mern-test node_modules/.bin/nyc node node_modules/ava/cli.js",
    "watch:test": "npm run test -- --watch",
    "cover": "nyc npm run test",
    "check-coverage": "nyc check-coverage --statements 100 --branches 100 --functions 100 --lines 100",
    "start": "cross-env BABEL_DISABLE_CACHE=1 NODE_ENV=development nodemon index.js",
    "start:prod": "cross-env NODE_ENV=production node index.js",
    "bs": "npm run clean && npm run build && npm run build:server && npm run start:prod",
    "build": "cross-env NODE_ENV=production webpack --config webpack.config.prod.js",
    "build:server": "cross-env NODE_ENV=production webpack --config webpack.config.server.js",
    "clean": "rimraf dist",
    "slate": "rimraf node_modules && npm install",
    "lint": "eslint client server"
  },
  "engines": {
    "node": ">=6"
  },
  "jest": {
    "collectCoverageFrom": [
      "client/src/**/*.{js,jsx,mjs}"
    ],
    "setupFiles": [
      "<rootDir>/config/polyfills.js"
    ],
    "testMatch": [
      "<rootDir>/client/src/**/__tests__/**/*.{js,jsx,mjs}",
      "<rootDir>/client/src/**/?(*.)(spec|test).{js,jsx,mjs}"
    ],
    "testEnvironment": "node",
    "testURL": "http://localhost",
    "transform": {
      "^.+\\.(js|jsx|mjs)$": "<rootDir>/node_modules/babel-jest",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|mjs|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx|mjs)$"
    ],
    "moduleNameMapper": {
      "^react-native$": "react-native-web"
    },
    "moduleFileExtensions": [
      "web.js",
      "mjs",
      "js",
      "json",
      "web.jsx",
      "jsx",
      "node"
    ]
  },
  "babel": {
    "presets": [
      "react-app"
    ]
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "ava": {
    "files": [
      "client/**/*.spec.js",
      "server/**/*.spec.js"
    ],
    "source": [
      "client/**/*.js",
      "server/**/*.js"
    ],
    "failFast": true,
    "babel": "inherit",
    "require": [
      "./server/util/setup-test-env.js"
    ]
  },
  "nyc": {
    "include": [
      "client/**/*.js",
      "server/**/*.js"
    ],
    "exclude": [
      "**/*.spec.js",
      "client/reducers.js",
      "client/store.js",
      "client/routes.js",
      "server/util/setup-test-env.js",
      "server/util/test-helpers.js",
      "server/config.js",
      "server/dummyData.js"
    ],
    "reporter": [
      "lcov",
      "text",
      "html"
    ]
  }
}